import matplotlib.pyplot as plt
from matplotlib.font_manager import FontProperties
"""
missile 4500 
    win_rate
        DQN eps=0 y_1
        DQN eps=0.05 y_2
        DQN eps=decreasing y_3
    returns
        DQN eps=0 z_1
        DQN eps=0.05 z_2
        DQN eps=decreasing z_3
missile 4750
    win_rate
        DQN eps=0 y_11
"""
# 设置中文字体
import numpy as np

# 示例数据

y_1=[30.0, 90.0, 100.0, 30.0, 90.0, 90.0, 70.0, 60.0, 50.0, 100.0, 100.0, 100.0, 80.0, 50.0, 0.0, 10.0, 40.0, 90.0, 100.0, 100.0, 100.0, 50.0, 80.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 70.0, 50.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 100.0, 50.0, 100.0, 100.0, 100.0]
y_1=np.array([i*0.01 for i in y_1])
y_2=[20.0, 50.0, 10.0, 80.0, 90.0, 70.0, 50.0, 40.0, 30.0, 30.0, 40.0, 60.0, 100.0, 80.0, 30.0, 0.0, 50.0, 40.0, 20.0, 0.0, 60.0, 60.0, 20.0, 40.0, 50.0, 30.0, 80.0, 100.0, 100.0, 30.0, 10.0, 60.0, 60.0, 60.0, 100.0, 90.0, 80.0, 80.0, 40.0, 40.0, 90.0, 100.0, 90.0, 100.0, 40.0, 10.0, 30.0, 20.0, 40.0, 90.0]
y_2=np.array([i*0.01 for i in y_2])
y_3= [20.0, 20.0, 0.0, 10.0, 30.0, 10.0, 0.0, 0.0, 80.0, 90.0, 30.0, 50.0, 50.0, 30.0, 0.0, 40.0, 50.0, 0.0, 20.0, 70.0, 50.0, 70.0, 30.0, 80.0, 40.0, 80.0, 90.0, 60.0, 40.0, 90.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 0.0, 60.0, 100.0, 90.0, 80.0, 100.0, 100.0, 100.0, 60.0, 60.0, 50.0, 30.0]
y_3=np.array([i*0.01 for i in y_3])
# y_11=np.array([i*0.01 for i in y_11])
z_1 = np.array([-1531.1, -862.21, -1032.1, -1386.32, -1330.94, -1406.71, -718.35, -1119.67, -476.02])
z_1 = np.concatenate((z_1, np.full(41, -68.6)))
z_2 = [-1519.94, -1063.15, -1318.7, -1575.24, -1274.99, -1410.24, -1496.06, -1570.53, -1456.07, -1402.42, -1322.19, -1490.28, -1335.21, -1958.7, -2040.6, -1760.78, -1888.57, -1686.24, -1824.75, -1831.88, -1884.87, -1805.24, -1394.16, -751.44, -302.29, -102.59, -123.61, -248.58, -439.18, -1517.53, -429.83, -219.13, -316.06, -630.09, -906.09, -1020.21, -1055.84, -1172.94, -1582.28, -928.25, -573.81, -1127.23, -1026.5, -996.75, -896.06, -233.96, -676.23, -1164.15, -745.47, -857.54]
z_3=[-1179.95, -1335.77, -1247.3, -1410.43, -1184.76, -1269.26, -1292.79, -1424.22, -858.34, -435.73, -959.39, -999.38, -991.45, -819.36, -541.35, -653.09, -686.63, -2121.91, -1069.21, -1086.37, -1105.27, -1030.41, -1496.66, -1457.63, -1292.21, -1165.61, -1193.57, -1201.85, -1329.45, -1133.88, -1167.93, -1200.53, -1232.42, -1354.53, -1316.59, -1328.11, -2648.6, -1759.72, -1335.47, -1429.7, -1145.98, -1373.66, -1407.2, -1565.48, -1565.76, -1127.88, -1498.9, -2174.05, -1752.19, -1324.67]
z_11=[-5774.459657024984, -5776.781622481511, -5829.382042534321, -5812.138213527156, -5598.7056327278815, -5830.539703140863, -5549.846550851113, -5517.5375481101755, -4541.788944288308, -5758.299755409529, -5695.125171017494, -5551.514178155347, -5794.958133281073, -5063.640361552083, -6084.857613429822, -5628.485563081485, -4966.47066638946, -5574.672147583369, -5254.425683055673, -5246.848666297266, -5202.450256359382, -5668.491597826675, -5637.136388048495, -5655.4747364130735, -5751.540337828121, -5239.724708328254, -5031.586129020843, -5408.709073258409, -5991.862525749044, -5494.855124906664, -5443.146628151471, -5173.45376962962, -5630.0284406840365, -5419.283138237619, -5811.396762896919, -5011.6439146093335, -5242.2991079801095, -5197.847394413733, -4560.7091425438075, -4340.968005229957, -5560.205952081765, -5643.294652318719, -5659.784391114854, -5714.93377029427, -4763.912015180711, -5146.300135644949, -5328.32247927773, -5226.232971317545, -4850.858551853076, -4818.13284568306, -5214.149464858082, -5276.232971317545, -4998.709312823385, -5322.836525052701, -5276.232971317545, -5276.232971317545, -5276.232971317545, -5276.232971317545, -5276.232971317545, 
-5276.232971317545, -5276.232971317545, -5276.232971317545, -5276.232971317545, -5329.398118859953, -5596.081028860772, -4875.817308771231, -5208.432032738116, -5276.232971317545, -5186.687815196798, -5164.107980508414]
def plot_fig(y_1,y_2,y_3):
    # 定义长度为 10 的平均滤波器
    window = np.ones(10) / 10
    # 使用卷积计算滑动平均
    y_1_smooth = np.convolve(y_1, window, mode='valid')
    y_2_smooth = np.convolve(y_2, window, mode='valid')
    y_3_smooth = np.convolve(y_3, window, mode='valid')
    x = np.array(list(range(0, len(y_1_smooth))))
    # 示例数据
    plt.figure(dpi=250)
    # 创建折线图
    plt.plot(x, y_1_smooth, marker='o', linestyle='-', color='b', label='eps=0',markersize=2)
    plt.plot(x, y_2_smooth, marker='o', linestyle='-', color='r', label='eps=0.05',markersize=2)
    plt.plot(x, y_3_smooth, marker='o', linestyle='-', color='orange', label='eps decreasing',markersize=2)

    shadow_width_1 = 0.05  # 阴影宽度
    shadow_width_2=0.1
    y_1_upper = y_1_smooth + shadow_width_1
    y_1_lower = y_1_smooth - shadow_width_1
    y_2_upper = y_2_smooth + shadow_width_2
    y_2_lower = y_2_smooth - shadow_width_2
    y_3_upper = y_3_smooth + shadow_width_2
    y_3_lower = y_3_smooth - shadow_width_2
    # 填充阴影
    plt.fill_between(x, y_1_upper, y_1_lower, color='b', alpha=0.1)
    plt.fill_between(x, y_2_upper, y_2_lower, color='r', alpha=0.1)
    plt.fill_between(x, y_3_upper, y_3_lower, color='orange', alpha=0.1)#alpha是不透明度
    # 添加标题和标签
    plt.title('Return Curve of Different Greedy Degrees of DQN')
    plt.xlabel('Iteration(moving average)')
    plt.ylabel('Returns')
    # 添加网格
    plt.grid(True)
    # 显示图例
    plt.legend(loc='lower right',prop={'size':6})
    # 显示图表
    plt.show()
if __name__=="__main__":
    plot_fig(y_1,y_2,y_3)
